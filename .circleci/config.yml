version: 2.1
jobs:
  build:
    docker:
      - image: cimg/base:current-22.04
    steps:
      - checkout
      - setup_remote_docker      # https://circleci.com/docs/2.0/building-docker-images/
      - run:
          name: build image
          command: make docker-maximum-cuda GIT_DEPTH=--single-branch
          no_output_timeout: 30m
      - when:
          # takes too long for 1h1m CircleCI timeout overall
          # also, storage is limited...
          condition: false
          steps:
            - run:
                name: persist image
                command: |
                  sudo apt install pigz
                  docker image save ocrd/all:maximum-cuda | pigz --fast > ocrd-all-maximum.tar.gz
                no_output_timeout: 30m
            # can be downloaded from CircleCI.com and imported via "docker image load"
            - store_artifacts:
                path: ocrd-all-maximum.tar.gz
                destination: artifacts
  deploy:
    docker:
      - image: cimg/base:current-22.04
    parameters:
      variant:
        type:
          string
    steps:
      - checkout
      - setup_remote_docker      # https://circleci.com/docs/2.0/building-docker-images/
      - run:
          name: Build Docker image
          command: make docker-<< parameters.variant >> GIT_DEPTH=--single-branch
          # fails due to pip races: DOCKER_PARALLEL=-j3
          no_output_timeout: 30m
      - run:
          name: Alias Docker images
          command: docker tag ocrd/all:<< parameters.variant >> ocrd/all:<< parameters.variant >>-git
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push images to Docker Hub
          no_output_timeout: 2.5h
          command: |
            docker push ocrd/all:<< parameters.variant >>
            docker push ocrd/all:<< parameters.variant >>-git
      - when:
          condition:
            equal: [ maximum, << parameters.variant >> ]
          steps:
            - run:
                name: Alias and push intermediate variants
                command: |
                  docker tag ocrd/all:medium ocrd/all:medium-git
                  docker tag ocrd/all:minimum ocrd/all:minimum-git
                  docker push ocrd/all:minimum
                  docker push ocrd/all:minimum-git
                  docker push ocrd/all:medium
                  docker push ocrd/all:medium-git
      - when:
          condition:
            equal: [ maximum-cuda, << parameters.variant >> ]
          steps:
            - run:
                name: Create a date-versioned mirror of ocrd/all:maximum-cuda
                command: bash release.sh release-dockerhub
            - run:
                name: Update badge
                command: curl -X POST "$MICROBADGER_WEBHOOK" || true
workflows:
  version: 2
  build-master:
    jobs:
      - deploy:
          matrix:
            parameters:
              variant: [maximum, maximum-cuda]
          filters:
            branches:
              only: master
  build-pull-request:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
